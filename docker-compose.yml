services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - 80:80
  api:
    build:
      context: ./backend/api
      dockerfile: Dockerfile
    container_name: api
    environment:
      SERVER_PORT: 8080
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 8080:8080
    networks:
      - stockinsight-network
  postgres:
    image: postgres:18.0
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - stockinsight-network
  flyway:
    image: flyway/flyway:11.14
    container_name: flyway
    command: -url=jdbc:postgresql://postgres:5432/${POSTGRES_DB} -schemas=public -user=${POSTGRES_USER} -password=${POSTGRES_PASSWORD} -connectRetries=60 migrate
    volumes:
      - ./backend/flyway/migrations:/flyway/sql
    networks:
      - stockinsight-network
    depends_on:
      - postgres

volumes:
  postgres-data:
    name: postgres-data

networks:
  stockinsight-network:
    name: stockinsight-network